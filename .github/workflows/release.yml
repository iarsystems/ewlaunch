name: Build

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

permissions: write-all

jobs:

  createrelease:
    name: Create Release
    runs-on: [ubuntu-latest]
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v4
      with:
        name: release_url
        path: release_url.txt

  build:
    name: Build package
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-2019
            TARGET: windows
            CMD_BUILD: |
              mkdir ewlaunch
              pyinstaller --windowed --onefile ewlaunch_win.py --icon=ewlaunch.ico
              pyinstaller --onefile ewlaunch.py
              Move-Item dist/ewlaunch_win.exe ewlaunch/
              Move-Item dist/ewlaunch.exe ewlaunch/
              Copy-Item installations.ini ewlaunch/
              Copy-Item ewlaunch.ini ewlaunch/
              Copy-Item add_context_menu.reg ewlaunch/
              Copy-Item remove_context_menu.reg ewlaunch/
              Copy-Item README.md ewlaunch/
              Copy-Item init_env.bat ewlaunch/
              Copy-Item init_shell.bat ewlaunch/
              Compress-Archive -Path ewlaunch/ ewlaunch-"${env:VERSION_TAG}".zip

            OUT_FILE_NAME: ewlaunch-${{ github.ref_name }}.zip
            ASSET_MIME: application.zip
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.9.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.9.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
    - name: Build with pyinstaller for ${{ matrix.TARGET }}
      env:
        VERSION_TAG: ${{ github.ref_name }}
      run: ${{ matrix.CMD_BUILD }}
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v4.1.7
      with:
        name: release_url
    - name: Get Release File Name & Upload URL
      id: get_release_info
      shell: bash
      run: |
        value=`cat release_url.txt`
        echo ::set-output name=upload_url::$value
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ${{ matrix.OUT_FILE_NAME }}
        asset_name: ${{ matrix.OUT_FILE_NAME }}
        asset_content_type: ${{ matrix.ASSET_MIME }}
